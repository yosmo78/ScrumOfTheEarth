<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="delete__zeros_8cpp" kind="file" language="C++">
    <compoundname>delete_zeros.cpp</compoundname>
    <includes refid="delete__zeros_8h" local="yes">delete_zeros.h</includes>
    <incdepgraph>
      <node id="969">
        <label>QObject</label>
      </node>
      <node id="967">
        <label>shape.h</label>
        <link refid="shape_8h"/>
        <childnode refid="968" relation="include">
        </childnode>
        <childnode refid="969" relation="include">
        </childnode>
        <childnode refid="965" relation="include">
        </childnode>
      </node>
      <node id="965">
        <label>vector.h</label>
        <link refid="vector_8h"/>
        <childnode refid="966" relation="include">
        </childnode>
      </node>
      <node id="968">
        <label>QPainter</label>
      </node>
      <node id="963">
        <label>Group Project/ScrumOfTheEarth/delete_zeros.cpp</label>
        <link refid="delete_zeros.cpp"/>
        <childnode refid="964" relation="include">
        </childnode>
      </node>
      <node id="964">
        <label>delete_zeros.h</label>
        <link refid="delete__zeros_8h"/>
        <childnode refid="965" relation="include">
        </childnode>
        <childnode refid="967" relation="include">
        </childnode>
      </node>
      <node id="966">
        <label>algorithm</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="delete__zeros_8cpp_1a9dec4a09977f70bba53ccc9eb789f752" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void delete_Azeros</definition>
        <argsstring>(myStd::vector&lt; Shape * &gt; &amp;vec)</argsstring>
        <name>delete_Azeros</name>
        <param>
          <type><ref refid="classmyStd_1_1vector" kindref="compound">myStd::vector</ref>&lt; <ref refid="classShape" kindref="compound">Shape</ref> * &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>delete_Azeros erases any shape with zero area in a vector of <ref refid="classShape" kindref="compound">Shape</ref> Pointers </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Group Project/ScrumOfTheEarth/delete_zeros.cpp" line="5" column="1" bodyfile="Group Project/ScrumOfTheEarth/delete_zeros.cpp" bodystart="5" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="delete__zeros_8cpp_1afcfd6fbd3a7dab9bdb3ddf2ac08d7586" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void delete_Pzeros</definition>
        <argsstring>(myStd::vector&lt; Shape * &gt; &amp;vec)</argsstring>
        <name>delete_Pzeros</name>
        <param>
          <type><ref refid="classmyStd_1_1vector" kindref="compound">myStd::vector</ref>&lt; <ref refid="classShape" kindref="compound">Shape</ref> * &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>delete_Pzeros erases any shape with zero perimeter in a vector of <ref refid="classShape" kindref="compound">Shape</ref> Pointers </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Group Project/ScrumOfTheEarth/delete_zeros.cpp" line="18" column="1" bodyfile="Group Project/ScrumOfTheEarth/delete_zeros.cpp" bodystart="18" bodyend="28"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="delete__zeros_8h" kindref="compound">delete_zeros.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="delete__zeros_8cpp_1a9dec4a09977f70bba53ccc9eb789f752" kindref="member">delete_Azeros</ref>(<ref refid="classmyStd_1_1vector" kindref="compound">myStd::vector&lt;Shape*&gt;</ref><sp/>&amp;<sp/>vec)</highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vec.<ref refid="classmyStd_1_1vector_1a33ebe4dab379f466c8d3a2f08d9aa554" kindref="member">size</ref>();<sp/>++i)</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vec[i]-&gt;getArea()<sp/>==<sp/>0.0)</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec.<ref refid="classmyStd_1_1vector_1aa4ecb71647140e3c5226299f84828984" kindref="member">erase</ref>(vec.<ref refid="classmyStd_1_1vector_1adaa284b6b387f70d3244b4d6e64869c3" kindref="member">begin</ref>()<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--i;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="delete__zeros_8cpp_1afcfd6fbd3a7dab9bdb3ddf2ac08d7586" kindref="member">delete_Pzeros</ref>(<ref refid="classmyStd_1_1vector" kindref="compound">myStd::vector&lt;Shape*&gt;</ref><sp/>&amp;<sp/>vec)</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vec.<ref refid="classmyStd_1_1vector_1a33ebe4dab379f466c8d3a2f08d9aa554" kindref="member">size</ref>();<sp/>++i)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vec[i]-&gt;getPerimeter()<sp/>==<sp/>0.0)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec.<ref refid="classmyStd_1_1vector_1aa4ecb71647140e3c5226299f84828984" kindref="member">erase</ref>(vec.<ref refid="classmyStd_1_1vector_1adaa284b6b387f70d3244b4d6e64869c3" kindref="member">begin</ref>()<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--i;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Group Project/ScrumOfTheEarth/delete_zeros.cpp"/>
  </compounddef>
</doxygen>
