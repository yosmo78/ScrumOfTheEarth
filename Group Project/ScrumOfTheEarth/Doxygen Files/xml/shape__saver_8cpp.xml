<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="shape__saver_8cpp" kind="file" language="C++">
    <compoundname>shape_saver.cpp</compoundname>
    <includes refid="shape_8h" local="yes">shape.h</includes>
    <includes refid="square_8h" local="yes">square.h</includes>
    <includes refid="rectangle_8h" local="yes">rectangle.h</includes>
    <includes refid="line_8h" local="yes">line.h</includes>
    <includes refid="circle_8h" local="yes">circle.h</includes>
    <includes refid="ellipse_8h" local="yes">ellipse.h</includes>
    <includes refid="polygon_8h" local="yes">polygon.h</includes>
    <includes refid="polyline_8h" local="yes">polyline.h</includes>
    <includes refid="text_8h" local="yes">text.h</includes>
    <includes local="no">string</includes>
    <includes local="no">fstream</includes>
    <includes local="no">typeinfo</includes>
    <includes local="no">map</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="1443">
        <label>QObject</label>
      </node>
      <node id="1441">
        <label>shape.h</label>
        <link refid="shape_8h"/>
        <childnode refid="1442" relation="include">
        </childnode>
        <childnode refid="1443" relation="include">
        </childnode>
        <childnode refid="1444" relation="include">
        </childnode>
      </node>
      <node id="1447">
        <label>rectangle.h</label>
        <link refid="rectangle_8h"/>
        <childnode refid="1441" relation="include">
        </childnode>
        <childnode refid="1444" relation="include">
        </childnode>
      </node>
      <node id="1454">
        <label>text.h</label>
        <link refid="text_8h"/>
        <childnode refid="1441" relation="include">
        </childnode>
      </node>
      <node id="1449">
        <label>cmath</label>
      </node>
      <node id="1444">
        <label>vector.h</label>
        <link refid="vector_8h"/>
        <childnode refid="1445" relation="include">
        </childnode>
      </node>
      <node id="1455">
        <label>string</label>
      </node>
      <node id="1458">
        <label>map</label>
      </node>
      <node id="1450">
        <label>circle.h</label>
        <link refid="circle_8h"/>
        <childnode refid="1441" relation="include">
        </childnode>
      </node>
      <node id="1456">
        <label>fstream</label>
      </node>
      <node id="1442">
        <label>QPainter</label>
      </node>
      <node id="1457">
        <label>typeinfo</label>
      </node>
      <node id="1453">
        <label>polyline.h</label>
        <link refid="polyline_8h"/>
        <childnode refid="1444" relation="include">
        </childnode>
        <childnode refid="1441" relation="include">
        </childnode>
        <childnode refid="1449" relation="include">
        </childnode>
      </node>
      <node id="1448">
        <label>line.h</label>
        <link refid="line_8h"/>
        <childnode refid="1441" relation="include">
        </childnode>
        <childnode refid="1449" relation="include">
        </childnode>
      </node>
      <node id="1451">
        <label>ellipse.h</label>
        <link refid="ellipse_8h"/>
        <childnode refid="1441" relation="include">
        </childnode>
        <childnode refid="1449" relation="include">
        </childnode>
      </node>
      <node id="1459">
        <label>iostream</label>
      </node>
      <node id="1446">
        <label>square.h</label>
        <link refid="square_8h"/>
        <childnode refid="1441" relation="include">
        </childnode>
        <childnode refid="1444" relation="include">
        </childnode>
      </node>
      <node id="1440">
        <label>Group Project/ScrumOfTheEarth/shape_saver.cpp</label>
        <link refid="shape_saver.cpp"/>
        <childnode refid="1441" relation="include">
        </childnode>
        <childnode refid="1446" relation="include">
        </childnode>
        <childnode refid="1447" relation="include">
        </childnode>
        <childnode refid="1448" relation="include">
        </childnode>
        <childnode refid="1450" relation="include">
        </childnode>
        <childnode refid="1451" relation="include">
        </childnode>
        <childnode refid="1452" relation="include">
        </childnode>
        <childnode refid="1453" relation="include">
        </childnode>
        <childnode refid="1454" relation="include">
        </childnode>
        <childnode refid="1455" relation="include">
        </childnode>
        <childnode refid="1456" relation="include">
        </childnode>
        <childnode refid="1457" relation="include">
        </childnode>
        <childnode refid="1458" relation="include">
        </childnode>
        <childnode refid="1459" relation="include">
        </childnode>
      </node>
      <node id="1445">
        <label>algorithm</label>
      </node>
      <node id="1452">
        <label>polygon.h</label>
        <link refid="polygon_8h"/>
        <childnode refid="1441" relation="include">
        </childnode>
        <childnode refid="1444" relation="include">
        </childnode>
        <childnode refid="1449" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="shape__saver_8cpp_1a10f04d837286200d6897a667cd7baa1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void shape_saver</definition>
        <argsstring>(myStd::vector&lt; Shape * &gt; &amp;vec, const char *filename)</argsstring>
        <name>shape_saver</name>
        <param>
          <type><ref refid="classmyStd_1_1vector" kindref="compound">myStd::vector</ref>&lt; <ref refid="classShape" kindref="compound">Shape</ref> * &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Saves a vector of shape pointers to a file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vector</parametername>
</parameternamelist>
<parameterdescription>
<para>of shapes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>as c-string </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Group Project/ScrumOfTheEarth/shape_saver.cpp" line="18" column="1" bodyfile="Group Project/ScrumOfTheEarth/shape_saver.cpp" bodystart="18" bodyend="195"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shape_8h" kindref="compound">shape.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="square_8h" kindref="compound">square.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rectangle_8h" kindref="compound">rectangle.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="line_8h" kindref="compound">line.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="circle_8h" kindref="compound">circle.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ellipse_8h" kindref="compound">ellipse.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="polygon_8h" kindref="compound">polygon.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="polyline_8h" kindref="compound">polyline.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="text_8h" kindref="compound">text.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeinfo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="shape__saver_8cpp_1a10f04d837286200d6897a667cd7baa1e" kindref="member">shape_saver</ref>(<ref refid="classmyStd_1_1vector" kindref="compound">myStd::vector&lt;Shape*&gt;</ref>&amp;<sp/>vec,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename)</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>qtColors[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;color0&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;color1&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;black&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;darkGray&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;gray&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;lightGray&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;red&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;green&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;blue&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;cyan&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;magenta&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;yellow&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;darkRed&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;darkGreen&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;darkBlue&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;darkCyan&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;darkMagenta&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;darkYellow&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;transparent&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>penStyles[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;NoPen&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;SolidLine&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;DashLine&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;DotLine&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;DashDotLine&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;DashDotDotLine&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;CustomDashLine&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>penCapStyles[0x21]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;FlatCap&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>penCapStyles[0x10]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SqaureCap&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>penCapStyles[0x20]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;RoundCap&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>penJoinStyles[0x81]=<sp/>{</highlight><highlight class="stringliteral">&quot;MiterJoin&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>penJoinStyles[0x40]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;BevelJoin&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>penJoinStyles[0x80]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;RoundJoin&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>brushStyles[]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;NoBrush&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;SolidPattern&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Dense1Pattern&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Dense2Pattern&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Dense3Pattern&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Dense4Pattern&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Dense5Pattern&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Dense6Pattern&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Dense7Pattern&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;HorPattern&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;VerPattern&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;CrossPattern&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;BDiagPattern&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;FDiagPattern&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;DiagCrossPattern&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;LinearGradientPattern&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;RadialGradientPattern&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;ConicalGradientPattern&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;TexturePattern&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>textAlignments[0x0085];<sp/></highlight><highlight class="comment">//check<sp/>these<sp/>later,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>textAlignments[0x0001]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;AlignLeft&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>textAlignments[0x0002]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;AlignRight&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>textAlignments[0x0004]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;AlignHCenter&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>textAlignments[0x0008]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;AlignJustify&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>textAlignments[0x0020]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;AlignTop&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>textAlignments[0x0040]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;AlignBottom&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>textAlignments[0x0080]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;AlignVCenter&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>textAlignments[0x0004|0x0080]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;AlignCenter&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>textFontStyles[]<sp/><sp/><sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;StyleNormal&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;StyleItalic&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;StyleOblique&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>textFontWeights[99];</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>textFontWeights[25]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Light&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>textFontWeights[50]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Normal&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>textFontWeights[63]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;DemiBold&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>textFontWeights[75]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Bold&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>textFontWeights[87]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Black&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;int,<sp/>std::string&gt;<sp/>typeMap;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>typeMap[<ref refid="classSquare_1a5d6e510d07f465fefdd1cdbbd041db2f" kindref="member">Square::getStaticType</ref>()]<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Square&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>typeMap[<ref refid="classRectangle_1ac9e18cf57224bfbc584547c0ee6d1ce3" kindref="member">Rectangle::getStaticType</ref>()]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Rectangle&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>typeMap[<ref refid="classLine_1aec5465504d5c944920fd96a7d81c8472" kindref="member">Line::getStaticType</ref>()]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Line&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>typeMap[<ref refid="classCircle_1ac5e287c2511f325888d340b6555d51b5" kindref="member">Circle::getStaticType</ref>()]<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Circle&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>typeMap[<ref refid="classEllipse_1a05cf0c6c09a47baaaed6c2d0df922dfb" kindref="member">Ellipse::getStaticType</ref>()]<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Ellipse&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>typeMap[<ref refid="classPolygon_1a8aeea28a673b2ef2df1dd150ebb4f8d9" kindref="member">Polygon::getStaticType</ref>()]<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Polygon&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>typeMap[<ref refid="classPolyline_1abe58d8a06186437737d4c2f856328855" kindref="member">Polyline::getStaticType</ref>()]<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Polyline&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>typeMap[<ref refid="classText_1aa63f66168dc6f0af547710743a52f9c9" kindref="member">Text::getStaticType</ref>()]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Text&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ofstream<sp/>fout;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vec.<ref refid="classmyStd_1_1vector_1a33ebe4dab379f466c8d3a2f08d9aa554" kindref="member">size</ref>()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout.open(</highlight><highlight class="stringliteral">&quot;Error.txt&quot;</highlight><highlight class="normal">,std::ios_base::out|std::ios_base::app);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Tried<sp/>to<sp/>save<sp/>an<sp/>empty<sp/>vector\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout.close();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>fout.open(filename);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!fout.fail())</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classShape" kindref="compound">myStd::vector&lt;Shape*&gt;::const_iterator</ref><sp/>tmp<sp/>=<sp/>vec.<ref refid="classmyStd_1_1vector_1adaa284b6b387f70d3244b4d6e64869c3" kindref="member">begin</ref>();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;i<sp/>&lt;<sp/>vec.<ref refid="classmyStd_1_1vector_1a33ebe4dab379f466c8d3a2f08d9aa554" kindref="member">size</ref>()<sp/>;++i)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ShapeId:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;(*tmp)-&gt;<ref refid="classShape_1a3ac221427e91b0acc53a2f3764a8f01b" kindref="member">getShapeId</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ShapeType:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>typeMap[(**tmp).getType()]&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ShapeDimensions:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((**tmp).getType()<sp/>==<sp/><ref refid="classSquare_1a5d6e510d07f465fefdd1cdbbd041db2f" kindref="member">Square::getStaticType</ref>())</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSquare" kindref="compound">Square</ref><sp/>*<sp/>sptr<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classSquare" kindref="compound">Square</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*tmp);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/>sptr-&gt;<ref refid="classSquare_1a2fdd4544900c08c881c4bf4effe0b974" kindref="member">getCornerPoint</ref>().x()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sptr-&gt;<ref refid="classSquare_1a2fdd4544900c08c881c4bf4effe0b974" kindref="member">getCornerPoint</ref>().y()</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>sptr-&gt;<ref refid="classSquare_1a6d8a8d8ec4383ebefe4c274f189c6a79" kindref="member">getLength</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenColor:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>qtColors[sptr-&gt;<ref refid="classSquare_1a8e9f690383213cb901883ba0fd008818" kindref="member">getPenColor</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenWidth:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sptr-&gt;<ref refid="classSquare_1ac6b3bedb6d43e5059840221331d802fd" kindref="member">getPenWidth</ref>()<sp/>&lt;&lt;</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenStyle:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>penStyles[sptr-&gt;<ref refid="classSquare_1a8acc57d1601adeb0800648799fc8beae" kindref="member">getPenStyle</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenCapStyle:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>penCapStyles[sptr-&gt;<ref refid="classSquare_1a3b91e8b3b03d2a6125836a5477cfc9be" kindref="member">getPenCapStyle</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenJoinStyle:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>penJoinStyles[sptr-&gt;<ref refid="classSquare_1a6fd69d97012e009ffea95e457f3a845e" kindref="member">getPenJoinStyle</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;BrushColor:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>qtColors[sptr-&gt;<ref refid="classSquare_1a8f504b5de9fc6cbc7aedc90c6559cb58" kindref="member">getBrushColor</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;BrushStyle:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>brushStyles[sptr-&gt;<ref refid="classSquare_1a63e121e72afaba2766f24a0d8816974f" kindref="member">getBrushStyle</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((**tmp).getType()<sp/>==<sp/><ref refid="classRectangle_1ac9e18cf57224bfbc584547c0ee6d1ce3" kindref="member">Rectangle::getStaticType</ref>())</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRectangle" kindref="compound">Rectangle</ref><sp/>*<sp/>rptr<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classRectangle" kindref="compound">Rectangle</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(*tmp);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/>rptr-&gt;<ref refid="classRectangle_1a934ec26d7cff08b196e6e2db94508d5d" kindref="member">getCornerPoint</ref>().x()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rptr-&gt;<ref refid="classRectangle_1a934ec26d7cff08b196e6e2db94508d5d" kindref="member">getCornerPoint</ref>().y()</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;rptr-&gt;<ref refid="classRectangle_1a58c26a2910e8982b49fafd02d1d3aa47" kindref="member">getLength</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rptr-&gt;<ref refid="classRectangle_1ab750e4f0666df9c303ad649342bf3efd" kindref="member">getWidth</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenColor:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>qtColors[rptr-&gt;<ref refid="classRectangle_1a260ef02e14a452e25b1ebddc805928c8" kindref="member">getPenColor</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenWidth:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rptr-&gt;<ref refid="classRectangle_1a45243b7fbe88527e6aed399b37863305" kindref="member">getPenWidth</ref>()<sp/>&lt;&lt;</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenStyle:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>penStyles[rptr-&gt;<ref refid="classRectangle_1abb61dc270e5b2b4ae3323e097e6fb7ce" kindref="member">getPenStyle</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenCapStyle:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>penCapStyles[rptr-&gt;<ref refid="classRectangle_1a7e42f496cbaa93545c370a1a4aef4d42" kindref="member">getPenCapStyle</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenJoinStyle:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>penJoinStyles[rptr-&gt;<ref refid="classRectangle_1aaeb26e28ee7b37e166caeb1bf4ea7ec4" kindref="member">getPenJoinStyle</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;BrushColor:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>qtColors[rptr-&gt;<ref refid="classRectangle_1af105857f6e7bda45c45d0ce1309a032e" kindref="member">getBrushColor</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;BrushStyle:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>brushStyles[rptr-&gt;<ref refid="classRectangle_1aaa486dcefcdd7e59e63d92c105876724" kindref="member">getBrushStyle</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((**tmp).getType()<sp/>==<sp/><ref refid="classLine_1aec5465504d5c944920fd96a7d81c8472" kindref="member">Line::getStaticType</ref>())</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classLine" kindref="compound">Line</ref><sp/>*<sp/>lptr<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classLine" kindref="compound">Line</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(*tmp);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/>lptr-&gt;<ref refid="classLine_1ad0f6a573ebd8220236e7de8202717f97" kindref="member">getPoint1</ref>().x()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lptr-&gt;<ref refid="classLine_1ad0f6a573ebd8220236e7de8202717f97" kindref="member">getPoint1</ref>().y()</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;lptr-&gt;<ref refid="classLine_1aa64a85c213850620e2ca3df153fe7846" kindref="member">getPoint2</ref>().x()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lptr-&gt;<ref refid="classLine_1aa64a85c213850620e2ca3df153fe7846" kindref="member">getPoint2</ref>().y()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenColor:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>qtColors[lptr-&gt;<ref refid="classLine_1a2d9f0fdcc2da8a29ba39660579150863" kindref="member">getPenColor</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenWidth:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lptr-&gt;<ref refid="classLine_1aedbb24685047a4f591fab1b8b7d39125" kindref="member">getPenWidth</ref>()<sp/>&lt;&lt;</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenStyle:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>penStyles[lptr-&gt;<ref refid="classLine_1ab461e7db1a107472e97af08183fccc19" kindref="member">getPenStyle</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenCapStyle:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>penCapStyles[lptr-&gt;<ref refid="classLine_1afee8c712228659e647752e7198d6891c" kindref="member">getPenCapStyle</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenJoinStyle:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>penJoinStyles[lptr-&gt;<ref refid="classLine_1a070564edc368231e089c8275ccc2e72d" kindref="member">getPenJoinStyle</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((**tmp).getType()<sp/>==<sp/><ref refid="classCircle_1ac5e287c2511f325888d340b6555d51b5" kindref="member">Circle::getStaticType</ref>())</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCircle" kindref="compound">Circle</ref><sp/>*<sp/>cptr<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classCircle" kindref="compound">Circle</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(*tmp);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/>cptr-&gt;<ref refid="classCircle_1a363e30a4f7d06116167e77e271955998" kindref="member">getPoint1</ref>().x()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cptr-&gt;<ref refid="classCircle_1a363e30a4f7d06116167e77e271955998" kindref="member">getPoint1</ref>().y()</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>cptr-&gt;<ref refid="classCircle_1adfc2e5e026f5d80215563cc42260a237" kindref="member">getRadius</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenColor:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>qtColors[cptr-&gt;<ref refid="classCircle_1a56a594eac870bedf7c268a024bbd92d3" kindref="member">getPenColor</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenWidth:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cptr-&gt;<ref refid="classCircle_1ab7d1e660ddced5d2f6fd36290f06083a" kindref="member">getPenWidth</ref>()<sp/>&lt;&lt;</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenStyle:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>penStyles[cptr-&gt;<ref refid="classCircle_1aca52e370c08797fd90af17499bc33e5b" kindref="member">getPenStyle</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenCapStyle:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>penCapStyles[cptr-&gt;<ref refid="classCircle_1abaf3d67a11b83ba5df3ce7a8a382bbc1" kindref="member">getPenCapStyle</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenJoinStyle:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>penJoinStyles[cptr-&gt;<ref refid="classCircle_1ac4ecd23537522a25d55e9d7197c7d9b5" kindref="member">getPenJoinStyle</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;BrushColor:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>qtColors[cptr-&gt;<ref refid="classCircle_1a82bde4b53ba1026e640db30b1096d60b" kindref="member">getBrushColor</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;BrushStyle:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>brushStyles[cptr-&gt;<ref refid="classCircle_1a4ec3092959992a2a6b2782e622617bda" kindref="member">getBrushStyle</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((**tmp).getType()<sp/>==<sp/><ref refid="classEllipse_1a05cf0c6c09a47baaaed6c2d0df922dfb" kindref="member">Ellipse::getStaticType</ref>())</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEllipse" kindref="compound">Ellipse</ref><sp/>*<sp/>eptr<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classEllipse" kindref="compound">Ellipse</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(*tmp);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/>eptr-&gt;<ref refid="classEllipse_1a8d67061c0516c89e5bbcd17e1b2b22c9" kindref="member">getTopLeft</ref>().x()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>eptr-&gt;<ref refid="classEllipse_1a8d67061c0516c89e5bbcd17e1b2b22c9" kindref="member">getTopLeft</ref>().y()</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;eptr-&gt;<ref refid="classEllipse_1a4cb6a9a3ef286098d0ab36f8fecb2091" kindref="member">getMajorAxis</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>eptr-&gt;<ref refid="classEllipse_1aa8d0c595dfee2a27dd3f44caf8f398b1" kindref="member">getMinorAxis</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenColor:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>qtColors[eptr-&gt;<ref refid="classEllipse_1a695959f0218a53af7758d671189ce558" kindref="member">getPenColor</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenWidth:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>eptr-&gt;<ref refid="classEllipse_1a8d3e931715310a529b6690d3dc711181" kindref="member">getPenWidth</ref>()<sp/>&lt;&lt;</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenStyle:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>penStyles[eptr-&gt;<ref refid="classEllipse_1ad62330c89dd6f3ebc7e08378aebf6518" kindref="member">getPenStyle</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenCapStyle:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>penCapStyles[eptr-&gt;<ref refid="classEllipse_1a31f27784ade1471b1c48e23d0c4dcfc3" kindref="member">getPenCapStyle</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenJoinStyle:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>penJoinStyles[eptr-&gt;<ref refid="classEllipse_1a0f6832606831fd3399a84b0f3174249a" kindref="member">getPenJoinStyle</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;BrushColor:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>qtColors[eptr-&gt;<ref refid="classEllipse_1ad170f1cfd8af739d7202144b92a25861" kindref="member">getBrushColor</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;BrushStyle:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>brushStyles[eptr-&gt;<ref refid="classEllipse_1ab3c8a9b4e1cb554f1ad8677a407ac398" kindref="member">getBrushStyle</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((**tmp).getType()<sp/>==<sp/><ref refid="classPolygon_1a8aeea28a673b2ef2df1dd150ebb4f8d9" kindref="member">Polygon::getStaticType</ref>())</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPolygon" kindref="compound">Polygon</ref><sp/>*<sp/>pptr<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classPolygon" kindref="compound">Polygon</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(*tmp);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pptr-&gt;<ref refid="classPolygon_1aaa21d89b5cdf770f421d19524e82734c" kindref="member">getNumOfPoints</ref>();++i)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/>((pptr-&gt;<ref refid="classPolygon_1a254935fca8f07c8b337ae96e19283464" kindref="member">getPolyPoints</ref>())+i)-&gt;x()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;((pptr-&gt;<ref refid="classPolygon_1a254935fca8f07c8b337ae96e19283464" kindref="member">getPolyPoints</ref>())+i)-&gt;y();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/>(i<sp/>==<sp/>(pptr-&gt;<ref refid="classPolygon_1aaa21d89b5cdf770f421d19524e82734c" kindref="member">getNumOfPoints</ref>()-1)?</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenColor:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>qtColors[pptr-&gt;<ref refid="classPolygon_1a495a1a0d772def2064a1c19762b769c2" kindref="member">getPenColor</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenWidth:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pptr-&gt;<ref refid="classPolygon_1af05a6abd65de0aba9704b9acbbba80c5" kindref="member">getPenWidth</ref>()<sp/>&lt;&lt;</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenStyle:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>penStyles[pptr-&gt;<ref refid="classPolygon_1ad17a682e3a31c185086a56ac36b1a732" kindref="member">getPenStyle</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenCapStyle:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>penCapStyles[pptr-&gt;<ref refid="classPolygon_1a6a87aa5a647a925d520fb3462e3450dc" kindref="member">getPenCapStyle</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenJoinStyle:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>penJoinStyles[pptr-&gt;<ref refid="classPolygon_1a1472bbc12cc60b90b666d509ffefaf47" kindref="member">getPenJoinStyle</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;BrushColor:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>qtColors[pptr-&gt;<ref refid="classPolygon_1a201ddc5bb4071243ec497028f70b6d51" kindref="member">getBrushColor</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;BrushStyle:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>brushStyles[pptr-&gt;<ref refid="classPolygon_1a8a827f50a6b4f1a3233cc343b26e5bf4" kindref="member">getBrushStyle</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((**tmp).getType()<sp/>==<sp/><ref refid="classPolyline_1abe58d8a06186437737d4c2f856328855" kindref="member">Polyline::getStaticType</ref>())</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPolyline" kindref="compound">Polyline</ref><sp/>*<sp/>pptr<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classPolyline" kindref="compound">Polyline</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(*tmp);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pptr-&gt;<ref refid="classPolyline_1ac81ab6c46f172b381cc7b6ed4d6ec942" kindref="member">getNumOfPoints</ref>();++i)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/>((pptr-&gt;<ref refid="classPolyline_1ae38a1e1f4d3a0506cac0afcee0cbf93e" kindref="member">getPoints</ref>().<ref refid="classmyStd_1_1vector_1adaa284b6b387f70d3244b4d6e64869c3" kindref="member">begin</ref>())+i)-&gt;x()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;((pptr-&gt;<ref refid="classPolyline_1ae38a1e1f4d3a0506cac0afcee0cbf93e" kindref="member">getPoints</ref>().<ref refid="classmyStd_1_1vector_1adaa284b6b387f70d3244b4d6e64869c3" kindref="member">begin</ref>())+i)-&gt;y();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/>(i<sp/>==<sp/>(pptr-&gt;<ref refid="classPolyline_1ae38a1e1f4d3a0506cac0afcee0cbf93e" kindref="member">getPoints</ref>().<ref refid="classmyStd_1_1vector_1a33ebe4dab379f466c8d3a2f08d9aa554" kindref="member">size</ref>()-1)?</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenColor:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>qtColors[pptr-&gt;<ref refid="classPolyline_1a334e86d5b90a0f90649c64d37e95cff9" kindref="member">getPenColor</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenWidth:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pptr-&gt;<ref refid="classPolyline_1ab01dd06f45e43dc9e6617596065fee70" kindref="member">getPenWidth</ref>()<sp/>&lt;&lt;</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenStyle:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>penStyles[pptr-&gt;<ref refid="classPolyline_1aefe298425b83dbc94724ab5cb215bba3" kindref="member">getPenStyle</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenCapStyle:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>penCapStyles[pptr-&gt;<ref refid="classPolyline_1acd78e365c667da035656279076bf5fe1" kindref="member">getPenCapStyle</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PenJoinStyle:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>penJoinStyles[pptr-&gt;<ref refid="classPolyline_1a6bd520d9c7fef132bc43cbf61168917c" kindref="member">getPenJoinStyle</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((**tmp).getType()<sp/>==<sp/><ref refid="classText_1aa63f66168dc6f0af547710743a52f9c9" kindref="member">Text::getStaticType</ref>())</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classText" kindref="compound">Text</ref><sp/>*<sp/>tptr<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classText" kindref="compound">Text</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(*tmp);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/>tptr-&gt;<ref refid="classText_1a599aa1ac67ad501551a851f2dbc1d90a" kindref="member">getCornerPoint</ref>().x()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>tptr-&gt;<ref refid="classText_1a599aa1ac67ad501551a851f2dbc1d90a" kindref="member">getCornerPoint</ref>().y()</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tptr-&gt;<ref refid="classText_1a0d184f40401d7b4a8127470702bbe1ea" kindref="member">getLength</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tptr-&gt;<ref refid="classText_1aa426e679627149ff986a2c793b2ac71d" kindref="member">getWidth</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;TextString:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tptr-&gt;<ref refid="classText_1a873c6803659cfbc8282f746d6a15f158" kindref="member">getTextString</ref>().toStdString()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;TextColor:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>qtColors[tptr-&gt;<ref refid="classText_1ac6681a7e36595ab4465814caf87418e1" kindref="member">getGlobalColor</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;TextAlignment:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>textAlignments[tptr-&gt;<ref refid="classText_1a20c87e3d4ca218bdaae3181922091ca5" kindref="member">getAlignmentFlag</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;TextPointSize:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tptr-&gt;<ref refid="classText_1a14d8585dd9a39a1bfecd1b2b44131464" kindref="member">getTextPointSize</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;TextFontFamily:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tptr-&gt;<ref refid="classText_1ac72f905a25316d1c271674811e31f724" kindref="member">getTextFontFamily</ref>().toStdString()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;TextFontStyle:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>textFontStyles[tptr-&gt;<ref refid="classText_1ad572034a19f008c64c63e858cf02a0a4" kindref="member">getTextFontStyle</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;TextFontWeight:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>textFontWeights[tptr-&gt;<ref refid="classText_1a633a61b274b66c47244430638cd57233" kindref="member">getTextFontWeight</ref>()]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ofstream<sp/>fout2;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout2.open(</highlight><highlight class="stringliteral">&quot;Error.txt&quot;</highlight><highlight class="normal">,std::ios_base::out|std::ios_base::app);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout2<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>Shape<sp/>trying<sp/>to<sp/>write<sp/>to<sp/>file\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout2.close();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tmp;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>fout.close();</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Group Project/ScrumOfTheEarth/shape_saver.cpp"/>
  </compounddef>
</doxygen>
