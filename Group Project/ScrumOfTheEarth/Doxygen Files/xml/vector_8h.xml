<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="vector_8h" kind="file" language="C++">
    <compoundname>vector.h</compoundname>
    <includes local="no">algorithm</includes>
    <includedby refid="addshape_8h" local="yes">Group Project/ScrumOfTheEarth/addshape.h</includedby>
    <includedby refid="shape_8h" local="yes">Group Project/ScrumOfTheEarth/shape.h</includedby>
    <includedby refid="shape__parser_8h" local="yes">Group Project/ScrumOfTheEarth/shape_parser.h</includedby>
    <includedby refid="polyline_8h" local="yes">Group Project/ScrumOfTheEarth/polyline.h</includedby>
    <includedby refid="polygon_8h" local="yes">Group Project/ScrumOfTheEarth/polygon.h</includedby>
    <includedby refid="rectangle_8h" local="yes">Group Project/ScrumOfTheEarth/rectangle.h</includedby>
    <includedby refid="square_8h" local="yes">Group Project/ScrumOfTheEarth/square.h</includedby>
    <includedby refid="moveshape_8h" local="yes">Group Project/ScrumOfTheEarth/moveshape.h</includedby>
    <includedby refid="delete__zeros_8h" local="yes">Group Project/ScrumOfTheEarth/delete_zeros.h</includedby>
    <includedby refid="searchandcompare_8h" local="yes">Group Project/ScrumOfTheEarth/searchandcompare.h</includedby>
    <includedby refid="pop__table_8h" local="yes">Group Project/ScrumOfTheEarth/pop_table.h</includedby>
    <includedby refid="renderarea_8h" local="yes">Group Project/ScrumOfTheEarth/renderarea.h</includedby>
    <incdepgraph>
      <node id="1524">
        <label>Group Project/ScrumOfTheEarth/vector.h</label>
        <link refid="vector.h"/>
        <childnode refid="1525" relation="include">
        </childnode>
      </node>
      <node id="1525">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1540">
        <label>Group Project/ScrumOfTheEarth/moveshape.h</label>
        <link refid="moveshape_8h"/>
        <childnode refid="1529" relation="include">
        </childnode>
        <childnode refid="1541" relation="include">
        </childnode>
      </node>
      <node id="1550">
        <label>Group Project/ScrumOfTheEarth/rectangle.cpp</label>
        <link refid="rectangle_8cpp"/>
      </node>
      <node id="1563">
        <label>Group Project/ScrumOfTheEarth/pop_table.h</label>
        <link refid="pop__table_8h"/>
        <childnode refid="1535" relation="include">
        </childnode>
        <childnode refid="1543" relation="include">
        </childnode>
      </node>
      <node id="1556">
        <label>Group Project/ScrumOfTheEarth/circle.cpp</label>
        <link refid="circle_8cpp"/>
      </node>
      <node id="1546">
        <label>Group Project/ScrumOfTheEarth/polyline.cpp</label>
        <link refid="polyline_8cpp"/>
      </node>
      <node id="1536">
        <label>Group Project/ScrumOfTheEarth/shape.h</label>
        <link refid="shape_8h"/>
        <childnode refid="1527" relation="include">
        </childnode>
        <childnode refid="1537" relation="include">
        </childnode>
        <childnode refid="1539" relation="include">
        </childnode>
        <childnode refid="1545" relation="include">
        </childnode>
        <childnode refid="1547" relation="include">
        </childnode>
        <childnode refid="1549" relation="include">
        </childnode>
        <childnode refid="1551" relation="include">
        </childnode>
        <childnode refid="1553" relation="include">
        </childnode>
        <childnode refid="1555" relation="include">
        </childnode>
        <childnode refid="1557" relation="include">
        </childnode>
        <childnode refid="1540" relation="include">
        </childnode>
        <childnode refid="1559" relation="include">
        </childnode>
        <childnode refid="1535" relation="include">
        </childnode>
        <childnode refid="1561" relation="include">
        </childnode>
        <childnode refid="1563" relation="include">
        </childnode>
        <childnode refid="1564" relation="include">
        </childnode>
        <childnode refid="1544" relation="include">
        </childnode>
      </node>
      <node id="1549">
        <label>Group Project/ScrumOfTheEarth/rectangle.h</label>
        <link refid="rectangle_8h"/>
        <childnode refid="1537" relation="include">
        </childnode>
        <childnode refid="1540" relation="include">
        </childnode>
        <childnode refid="1543" relation="include">
        </childnode>
        <childnode refid="1550" relation="include">
        </childnode>
        <childnode refid="1544" relation="include">
        </childnode>
      </node>
      <node id="1557">
        <label>Group Project/ScrumOfTheEarth/text.h</label>
        <link refid="text_8h"/>
        <childnode refid="1537" relation="include">
        </childnode>
        <childnode refid="1540" relation="include">
        </childnode>
        <childnode refid="1543" relation="include">
        </childnode>
        <childnode refid="1544" relation="include">
        </childnode>
        <childnode refid="1558" relation="include">
        </childnode>
      </node>
      <node id="1562">
        <label>Group Project/ScrumOfTheEarth/searchandcompare.cpp</label>
        <link refid="searchandcompare_8cpp"/>
      </node>
      <node id="1535">
        <label>Group Project/ScrumOfTheEarth/mainwindow.cpp</label>
        <link refid="mainwindow_8cpp"/>
      </node>
      <node id="1541">
        <label>Group Project/ScrumOfTheEarth/moveshape.cpp</label>
        <link refid="moveshape_8cpp"/>
      </node>
      <node id="1526">
        <label>Group Project/ScrumOfTheEarth/vector.h</label>
        <link refid="vector.h"/>
        <childnode refid="1527" relation="include">
        </childnode>
        <childnode refid="1536" relation="include">
        </childnode>
        <childnode refid="1537" relation="include">
        </childnode>
        <childnode refid="1545" relation="include">
        </childnode>
        <childnode refid="1547" relation="include">
        </childnode>
        <childnode refid="1549" relation="include">
        </childnode>
        <childnode refid="1551" relation="include">
        </childnode>
        <childnode refid="1540" relation="include">
        </childnode>
        <childnode refid="1559" relation="include">
        </childnode>
        <childnode refid="1561" relation="include">
        </childnode>
        <childnode refid="1563" relation="include">
        </childnode>
        <childnode refid="1564" relation="include">
        </childnode>
      </node>
      <node id="1533">
        <label>Group Project/ScrumOfTheEarth/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="1534">
        <label>Group Project/ScrumOfTheEarth/window.cpp</label>
        <link refid="window_8cpp"/>
      </node>
      <node id="1555">
        <label>Group Project/ScrumOfTheEarth/circle.h</label>
        <link refid="circle_8h"/>
        <childnode refid="1537" relation="include">
        </childnode>
        <childnode refid="1540" relation="include">
        </childnode>
        <childnode refid="1556" relation="include">
        </childnode>
        <childnode refid="1535" relation="include">
        </childnode>
        <childnode refid="1543" relation="include">
        </childnode>
        <childnode refid="1544" relation="include">
        </childnode>
      </node>
      <node id="1528">
        <label>Group Project/ScrumOfTheEarth/addshape.cpp</label>
        <link refid="addshape_8cpp"/>
      </node>
      <node id="1552">
        <label>Group Project/ScrumOfTheEarth/square.cpp</label>
        <link refid="square_8cpp"/>
      </node>
      <node id="1560">
        <label>Group Project/ScrumOfTheEarth/delete_zeros.cpp</label>
        <link refid="delete__zeros_8cpp"/>
      </node>
      <node id="1542">
        <label>Group Project/ScrumOfTheEarth/line.cpp</label>
        <link refid="line_8cpp"/>
      </node>
      <node id="1543">
        <label>Group Project/ScrumOfTheEarth/pop_table.cpp</label>
        <link refid="pop__table_8cpp"/>
      </node>
      <node id="1559">
        <label>Group Project/ScrumOfTheEarth/delete_zeros.h</label>
        <link refid="delete__zeros_8h"/>
        <childnode refid="1560" relation="include">
        </childnode>
        <childnode refid="1535" relation="include">
        </childnode>
      </node>
      <node id="1545">
        <label>Group Project/ScrumOfTheEarth/polyline.h</label>
        <link refid="polyline_8h"/>
        <childnode refid="1537" relation="include">
        </childnode>
        <childnode refid="1540" relation="include">
        </childnode>
        <childnode refid="1535" relation="include">
        </childnode>
        <childnode refid="1546" relation="include">
        </childnode>
        <childnode refid="1543" relation="include">
        </childnode>
        <childnode refid="1544" relation="include">
        </childnode>
      </node>
      <node id="1539">
        <label>Group Project/ScrumOfTheEarth/line.h</label>
        <link refid="line_8h"/>
        <childnode refid="1537" relation="include">
        </childnode>
        <childnode refid="1540" relation="include">
        </childnode>
        <childnode refid="1542" relation="include">
        </childnode>
        <childnode refid="1535" relation="include">
        </childnode>
        <childnode refid="1543" relation="include">
        </childnode>
        <childnode refid="1544" relation="include">
        </childnode>
      </node>
      <node id="1553">
        <label>Group Project/ScrumOfTheEarth/ellipse.h</label>
        <link refid="ellipse_8h"/>
        <childnode refid="1537" relation="include">
        </childnode>
        <childnode refid="1540" relation="include">
        </childnode>
        <childnode refid="1554" relation="include">
        </childnode>
        <childnode refid="1535" relation="include">
        </childnode>
        <childnode refid="1543" relation="include">
        </childnode>
        <childnode refid="1544" relation="include">
        </childnode>
      </node>
      <node id="1554">
        <label>Group Project/ScrumOfTheEarth/ellipse.cpp</label>
        <link refid="ellipse_8cpp"/>
      </node>
      <node id="1531">
        <label>Group Project/ScrumOfTheEarth/admin_check.cpp</label>
        <link refid="admin__check_8cpp"/>
      </node>
      <node id="1551">
        <label>Group Project/ScrumOfTheEarth/square.h</label>
        <link refid="square_8h"/>
        <childnode refid="1537" relation="include">
        </childnode>
        <childnode refid="1540" relation="include">
        </childnode>
        <childnode refid="1535" relation="include">
        </childnode>
        <childnode refid="1543" relation="include">
        </childnode>
        <childnode refid="1544" relation="include">
        </childnode>
        <childnode refid="1552" relation="include">
        </childnode>
      </node>
      <node id="1561">
        <label>Group Project/ScrumOfTheEarth/searchandcompare.h</label>
        <link refid="searchandcompare_8h"/>
        <childnode refid="1535" relation="include">
        </childnode>
        <childnode refid="1562" relation="include">
        </childnode>
      </node>
      <node id="1532">
        <label>Group Project/ScrumOfTheEarth/create_login_file.cpp</label>
        <link refid="create__login__file_8cpp"/>
      </node>
      <node id="1548">
        <label>Group Project/ScrumOfTheEarth/polygon.cpp</label>
        <link refid="polygon_8cpp"/>
      </node>
      <node id="1544">
        <label>Group Project/ScrumOfTheEarth/shape_saver.cpp</label>
        <link refid="shape__saver_8cpp"/>
      </node>
      <node id="1529">
        <label>Group Project/ScrumOfTheEarth/mainwindow.h</label>
        <link refid="mainwindow_8h"/>
        <childnode refid="1530" relation="include">
        </childnode>
        <childnode refid="1535" relation="include">
        </childnode>
      </node>
      <node id="1527">
        <label>Group Project/ScrumOfTheEarth/addshape.h</label>
        <link refid="addshape_8h"/>
        <childnode refid="1528" relation="include">
        </childnode>
        <childnode refid="1529" relation="include">
        </childnode>
      </node>
      <node id="1538">
        <label>Group Project/ScrumOfTheEarth/shape_parser.cpp</label>
        <link refid="shape__parser_8cpp"/>
      </node>
      <node id="1564">
        <label>Group Project/ScrumOfTheEarth/renderarea.h</label>
        <link refid="renderarea_8h"/>
      </node>
      <node id="1547">
        <label>Group Project/ScrumOfTheEarth/polygon.h</label>
        <link refid="polygon_8h"/>
        <childnode refid="1537" relation="include">
        </childnode>
        <childnode refid="1540" relation="include">
        </childnode>
        <childnode refid="1535" relation="include">
        </childnode>
        <childnode refid="1548" relation="include">
        </childnode>
        <childnode refid="1543" relation="include">
        </childnode>
        <childnode refid="1544" relation="include">
        </childnode>
      </node>
      <node id="1537">
        <label>Group Project/ScrumOfTheEarth/shape_parser.h</label>
        <link refid="shape__parser_8h"/>
        <childnode refid="1528" relation="include">
        </childnode>
        <childnode refid="1535" relation="include">
        </childnode>
        <childnode refid="1538" relation="include">
        </childnode>
      </node>
      <node id="1558">
        <label>Group Project/ScrumOfTheEarth/text.cpp</label>
        <link refid="text_8cpp"/>
      </node>
      <node id="1530">
        <label>Group Project/ScrumOfTheEarth/window.h</label>
        <link refid="window_8h"/>
        <childnode refid="1531" relation="include">
        </childnode>
        <childnode refid="1532" relation="include">
        </childnode>
        <childnode refid="1533" relation="include">
        </childnode>
        <childnode refid="1534" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmyStd_1_1vector" prot="public">myStd::vector</innerclass>
    <innernamespace refid="namespacemyStd">myStd</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="2"><highlight class="preprocessor">#ifndef<sp/>VECTOR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VECTOR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>std::copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::copy;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//This<sp/>is<sp/>the<sp/>templated<sp/>class<sp/>required<sp/>in<sp/>the<sp/>instructions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="namespacemyStd" refkind="compound"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemyStd" kindref="compound">myStd</ref></highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="20" refid="classmyStd_1_1vector" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmyStd_1_1vector" kindref="compound">vector</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/>NOTE:<sp/>elem[n]<sp/>is<sp/>vector<sp/>component<sp/>n<sp/>for<sp/>all<sp/>n<sp/>&gt;=<sp/>0<sp/>AND<sp/>n<sp/>&lt;<sp/>size_v</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_v<sp/>=<sp/>the<sp/>number<sp/>of<sp/>items<sp/>stored<sp/>in<sp/>the<sp/>vector</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>space<sp/>=<sp/>the<sp/>available<sp/>storage<sp/>capacity<sp/>of<sp/>the<sp/>vector<sp/>where<sp/>size_v<sp/>&lt;=<sp/>space</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>size_v<sp/>&lt;<sp/>space<sp/>there<sp/>is<sp/>space<sp/>for<sp/>(space<sp/>-<sp/>size_v)<sp/>doubles<sp/>after<sp/>elem[size_v-1]</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size_v;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>*elem;<sp/></highlight><highlight class="comment">//<sp/>pointer<sp/>to<sp/>the<sp/>elements<sp/>(or<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>space;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>elements<sp/>plus<sp/>number<sp/>of<sp/>free<sp/>slots</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37" refid="classmyStd_1_1vector_1a40e5c01ceb5d0c2bc64b23005c21ba04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmyStd_1_1vector_1a40e5c01ceb5d0c2bc64b23005c21ba04" kindref="member">vector</ref>()<sp/>:<sp/>size_v{0},<sp/>elem{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">},<sp/>space{0}<sp/>{}<sp/></highlight><highlight class="comment">//<sp/>default<sp/>constructor</highlight></codeline>
<codeline lineno="42" refid="classmyStd_1_1vector_1a3f942029ffea510e3c6e67310c18abb7" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classmyStd_1_1vector_1a3f942029ffea510e3c6e67310c18abb7" kindref="member">vector</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s)<sp/>:<sp/>size_v{0},<sp/>elem{</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[s]},<sp/>space{s}<sp/><sp/></highlight><highlight class="comment">//<sp/>alternate<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size_v;<sp/>++i)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem[i]<sp/>=<sp/>T();<sp/></highlight><highlight class="comment">//<sp/>elements<sp/>are<sp/>initialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51" refid="classmyStd_1_1vector_1ae425fb0a79cfa7870cf3603c8abe3369" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmyStd_1_1vector_1ae425fb0a79cfa7870cf3603c8abe3369" kindref="member">vector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmyStd_1_1vector" kindref="compound">vector</ref><sp/>&amp;src)<sp/>:<sp/>size_v{src.size_v},<sp/>elem{</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[src.size_v]},<sp/>space{src.space}<sp/></highlight><highlight class="comment">//<sp/>copy<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy(src.elem,<sp/>src.elem<sp/>+<sp/>size_v,<sp/>elem);<sp/></highlight><highlight class="comment">//<sp/>copy<sp/>elements<sp/>-<sp/>std::copy()<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59" refid="classmyStd_1_1vector_1a76692ca684b66499d2877824e1404205" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmyStd_1_1vector_1a76692ca684b66499d2877824e1404205" kindref="member">vector</ref>(<sp/><ref refid="classmyStd_1_1vector" kindref="compound">vector</ref><sp/>&amp;&amp;src)<sp/>:<sp/>size_v{src.size_v},<sp/>elem{src.elem},<sp/>space{src.space}<sp/></highlight><highlight class="comment">//<sp/>move<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src.elem<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//make<sp/>sure<sp/>src<sp/>does<sp/>not<sp/>delete<sp/>elem<sp/>when<sp/>destructor<sp/>is<sp/>called</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src.size_v<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69" refid="classmyStd_1_1vector_1a5cbbf45fd8ead8b9cbf4b0c7acf5010f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmyStd_1_1vector" kindref="compound">vector</ref><sp/>&amp;<ref refid="classmyStd_1_1vector_1a5cbbf45fd8ead8b9cbf4b0c7acf5010f" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmyStd_1_1vector" kindref="compound">vector</ref><sp/>&amp;src)<sp/></highlight><highlight class="comment">//<sp/>copy<sp/>assignment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>*p<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[src.size_v];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>new<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy(src.elem,<sp/>src.elem<sp/>+<sp/>src.size_v,<sp/>p);<sp/></highlight><highlight class="comment">//<sp/>copy<sp/>elements<sp/>-<sp/>std::copy()<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>elem;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>deallocate<sp/>old<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem<sp/>=<sp/>p;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>can<sp/>reset<sp/>elem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_v<sp/>=<sp/>src.size_v;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>space<sp/>=<sp/>src.space;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>a<sp/>self-reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="classmyStd_1_1vector_1a8aac18132c15abb44dea31300923ef3f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmyStd_1_1vector" kindref="compound">vector</ref>&amp;<sp/><ref refid="classmyStd_1_1vector_1a8aac18132c15abb44dea31300923ef3f" kindref="member">operator=</ref>(<ref refid="classmyStd_1_1vector" kindref="compound">vector</ref><sp/>&amp;&amp;src)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem<sp/>=<sp/>src.elem;</highlight><highlight class="comment">//steal<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_v<sp/>=<sp/>src.size_v;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>space<sp/>=<sp/>src.space;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src.elem<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight><highlight class="comment">//set<sp/>array<sp/>to<sp/>nullptr<sp/>in<sp/>order<sp/>to<sp/>not<sp/>delete<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight><highlight class="comment">//return<sp/>self-reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="classmyStd_1_1vector_1aaf4331a544887b4358befcfbce2deab4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmyStd_1_1vector_1aaf4331a544887b4358befcfbce2deab4" kindref="member">~vector</ref>()<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>elem;<sp/></highlight><highlight class="comment">//<sp/>destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106" refid="classmyStd_1_1vector_1a7840f76cb8fdb56e3a70506c7e0fbf5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>&amp;<ref refid="classmyStd_1_1vector_1a7840f76cb8fdb56e3a70506c7e0fbf5a" kindref="member">operator[]</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elem[n];<sp/></highlight><highlight class="comment">//<sp/>access:<sp/>return<sp/>reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114" refid="classmyStd_1_1vector_1ac86fa3944b7d23fc127f5b739935b5d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;<ref refid="classmyStd_1_1vector_1ac86fa3944b7d23fc127f5b739935b5d6" kindref="member">operator[]</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elem[n];</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121" refid="classmyStd_1_1vector_1a33ebe4dab379f466c8d3a2f08d9aa554" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmyStd_1_1vector_1a33ebe4dab379f466c8d3a2f08d9aa554" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size_v;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128" refid="classmyStd_1_1vector_1ad388bb612c6b9945731d562aeae8695b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmyStd_1_1vector_1ad388bb612c6b9945731d562aeae8695b" kindref="member">capacity</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>space;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135" refid="classmyStd_1_1vector_1aa54bd9c3d8d3b6191d7eb7f85490eadb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmyStd_1_1vector_1aa54bd9c3d8d3b6191d7eb7f85490eadb" kindref="member">resize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newsize)<sp/></highlight><highlight class="comment">//<sp/>growth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>the<sp/>vector<sp/>have<sp/>newsize<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>each<sp/>new<sp/>element<sp/>with<sp/>the<sp/>default<sp/>value<sp/>0.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmyStd_1_1vector_1a50e786a02a59e689999365037ae26b3a" kindref="member">reserve</ref>(newsize);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>size_v;<sp/>i<sp/>&lt;<sp/>newsize;<sp/>++i)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem[i]<sp/>=<sp/>T();<sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>new<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_v<sp/>=<sp/>newsize;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148" refid="classmyStd_1_1vector_1a16a7791abc12b34fee94f4ef48a5e157" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmyStd_1_1vector_1a16a7791abc12b34fee94f4ef48a5e157" kindref="member">push_back</ref>(T<sp/>d)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>increase<sp/>vector<sp/>size<sp/>by<sp/>one;<sp/>initialize<sp/>the<sp/>new<sp/>element<sp/>with<sp/>d</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(space<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmyStd_1_1vector_1a50e786a02a59e689999365037ae26b3a" kindref="member">reserve</ref>(8);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>with<sp/>space<sp/>for<sp/>8<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size_v<sp/>==<sp/>space)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmyStd_1_1vector_1a50e786a02a59e689999365037ae26b3a" kindref="member">reserve</ref>(2<sp/>*<sp/>space);<sp/></highlight><highlight class="comment">//<sp/>get<sp/>more<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size_v<sp/>==<sp/>space)<sp/></highlight><highlight class="comment">//if<sp/>still<sp/>equal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>;<sp/></highlight><highlight class="comment">//bad<sp/>alloc<sp/>out<sp/>of<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem[size_v]<sp/>=<sp/>d;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>d<sp/>at<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++size_v;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>increase<sp/>the<sp/>size<sp/>(size_v<sp/>is<sp/>the<sp/>number<sp/>of<sp/>elements)w</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167" refid="classmyStd_1_1vector_1a50e786a02a59e689999365037ae26b3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmyStd_1_1vector_1a50e786a02a59e689999365037ae26b3a" kindref="member">reserve</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newalloc)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//need<sp/>to<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>never<sp/>decrease<sp/>allocation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>new<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newalloc<sp/>&lt;=<sp/>space)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>;<sp/></highlight><highlight class="comment">//exit<sp/>func<sp/>if<sp/>new<sp/>space<sp/>is<sp/>&lt;<sp/>or<sp/>==</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/>tmp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">(std::nothrow)<sp/>T[newalloc];</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!tmp)<sp/></highlight><highlight class="comment">//check<sp/>if<sp/>bad_alloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>;<sp/></highlight><highlight class="comment">//if<sp/>bad<sp/>alloc<sp/>return<sp/>with<sp/>old<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(elem<sp/>!=<sp/>NULL)<sp/>copy(elem,elem+size_v,tmp);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>elem;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>space<sp/>=<sp/>newalloc;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>old<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>deallocate<sp/>old<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185" refid="classmyStd_1_1vector_1a667a65b093f1253d2229d06768aa3bf9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classmyStd_1_1vector_1a667a65b093f1253d2229d06768aa3bf9" kindref="member">iterator</ref><sp/>=<sp/>T<sp/>*;</highlight></codeline>
<codeline lineno="186" refid="classmyStd_1_1vector_1ae8f53b1db01169b861f0299f9ced0e37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classmyStd_1_1vector_1ae8f53b1db01169b861f0299f9ced0e37" kindref="member">const_iterator</ref><sp/>=<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>*;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="classmyStd_1_1vector_1adaa284b6b387f70d3244b4d6e64869c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmyStd_1_1vector_1a667a65b093f1253d2229d06768aa3bf9" kindref="member">iterator</ref><sp/><ref refid="classmyStd_1_1vector_1adaa284b6b387f70d3244b4d6e64869c3" kindref="member">begin</ref>()<sp/></highlight><highlight class="comment">//<sp/>points<sp/>to<sp/>first<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size_v<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;elem[0];</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202" refid="classmyStd_1_1vector_1a71600f2a06ab5c279a469972d713d5d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmyStd_1_1vector_1ae8f53b1db01169b861f0299f9ced0e37" kindref="member">const_iterator</ref><sp/><ref refid="classmyStd_1_1vector_1a71600f2a06ab5c279a469972d713d5d6" kindref="member">begin</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="203"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size_v<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;elem[0];</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212" refid="classmyStd_1_1vector_1a8fc7ec068c194f5ecb5a08e17a9c9ac4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmyStd_1_1vector_1a667a65b093f1253d2229d06768aa3bf9" kindref="member">iterator</ref><sp/><ref refid="classmyStd_1_1vector_1a8fc7ec068c194f5ecb5a08e17a9c9ac4" kindref="member">end</ref>()<sp/></highlight><highlight class="comment">//<sp/>points<sp/>to<sp/>one<sp/>beyond<sp/>the<sp/>last<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size_v<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;elem[size_v];</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="classmyStd_1_1vector_1adecc27953fecd9a02c54f2b2d6a28cff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmyStd_1_1vector_1ae8f53b1db01169b861f0299f9ced0e37" kindref="member">const_iterator</ref><sp/><ref refid="classmyStd_1_1vector_1adecc27953fecd9a02c54f2b2d6a28cff" kindref="member">end</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="224"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size_v<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;elem[size_v];</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="classmyStd_1_1vector_1a2dfafafc64febfbb0869be81f6bd4de7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmyStd_1_1vector_1a667a65b093f1253d2229d06768aa3bf9" kindref="member">iterator</ref><sp/><ref refid="classmyStd_1_1vector_1a2dfafafc64febfbb0869be81f6bd4de7" kindref="member">insert</ref>(<ref refid="classmyStd_1_1vector_1a667a65b093f1253d2229d06768aa3bf9" kindref="member">iterator</ref><sp/>p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;val)<sp/></highlight><highlight class="comment">//<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>val<sp/>before<sp/>p</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//need<sp/>to<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>we<sp/>have<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p<sp/>&lt;<sp/><ref refid="classmyStd_1_1vector_1adaa284b6b387f70d3244b4d6e64869c3" kindref="member">begin</ref>()||<sp/>p<sp/>&gt;<sp/><ref refid="classmyStd_1_1vector_1a8fc7ec068c194f5ecb5a08e17a9c9ac4" kindref="member">end</ref>())</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size_v<sp/>==<sp/>space)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmyStd_1_1vector_1a50e786a02a59e689999365037ae26b3a" kindref="member">reserve</ref>(2*space);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classmyStd_1_1vector_1a667a65b093f1253d2229d06768aa3bf9" kindref="member">iterator</ref><sp/>pos<sp/>=<sp/><ref refid="classmyStd_1_1vector_1a8fc7ec068c194f5ecb5a08e17a9c9ac4" kindref="member">end</ref>();<sp/>pos<sp/>!=<sp/>p;<sp/>--pos)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(pos)<sp/>=<sp/>*(pos-1);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>place<sp/>to<sp/>put<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>element<sp/>one<sp/>position<sp/>to<sp/>the<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="classmyStd_1_1vector_1aa4ecb71647140e3c5226299f84828984" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmyStd_1_1vector_1a667a65b093f1253d2229d06768aa3bf9" kindref="member">iterator</ref><sp/><ref refid="classmyStd_1_1vector_1aa4ecb71647140e3c5226299f84828984" kindref="member">erase</ref>(<ref refid="classmyStd_1_1vector_1a667a65b093f1253d2229d06768aa3bf9" kindref="member">iterator</ref><sp/>p)<sp/></highlight><highlight class="comment">//<sp/>remove<sp/>element<sp/>pointed<sp/>to<sp/>by<sp/>p</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/><ref refid="classmyStd_1_1vector_1a8fc7ec068c194f5ecb5a08e17a9c9ac4" kindref="member">end</ref>())</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classmyStd_1_1vector_1a667a65b093f1253d2229d06768aa3bf9" kindref="member">iterator</ref><sp/>pos<sp/>=<sp/>p<sp/>+<sp/>1;<sp/>pos<sp/>!=<sp/><ref refid="classmyStd_1_1vector_1a8fc7ec068c194f5ecb5a08e17a9c9ac4" kindref="member">end</ref>();<sp/>++pos)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(pos<sp/>-<sp/>1)<sp/>=<sp/>*pos;<sp/></highlight><highlight class="comment">//<sp/>copy<sp/>element<sp/>one<sp/>position<sp/>to<sp/>the<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//delete<sp/>(end()<sp/>-<sp/>1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--size_v;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="classmyStd_1_1vector_1a67598296046328471d19ce1fc5be796f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmyStd_1_1vector_1a67598296046328471d19ce1fc5be796f" kindref="member">deallocPtrData</ref>()<sp/><sp/></highlight><highlight class="comment">//if<sp/>type<sp/>it<sp/>pointer<sp/>to<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>tmp;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;i<sp/>&lt;<sp/>size_v;<sp/>++i)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>*(elem+i);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="classmyStd_1_1vector_1ab67c727d73d08372770562b4e4ae7a05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmyStd_1_1vector_1ab67c727d73d08372770562b4e4ae7a05" kindref="member">deallocPtrArrayData</ref>()<sp/></highlight><highlight class="comment">//if<sp/>type<sp/>is<sp/>dynamic<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>tmp;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;i<sp/>&lt;<sp/>size_v;<sp/>++i)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>*(elem+i);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>tmp;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302" refid="classmyStd_1_1vector_1a794565e7ec67e8d2b90fe2247612a778" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmyStd_1_1vector_1a794565e7ec67e8d2b90fe2247612a778" kindref="member">deleteList</ref>()</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmyStd_1_1vector_1a67598296046328471d19ce1fc5be796f" kindref="member">deallocPtrData</ref>();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>elem;<sp/></highlight><highlight class="comment">//<sp/>destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>space<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_v<sp/>=0;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313" refid="classmyStd_1_1vector_1a6a0db76b04cb2c2bf8b7aa9d2a6f36c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmyStd_1_1vector_1a6a0db76b04cb2c2bf8b7aa9d2a6f36c4" kindref="member">deleteArrayList</ref>()</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmyStd_1_1vector_1ab67c727d73d08372770562b4e4ae7a05" kindref="member">deallocPtrArrayData</ref>();</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>elem;<sp/></highlight><highlight class="comment">//<sp/>destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>space<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_v<sp/>=0;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>VECTOR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Group Project/ScrumOfTheEarth/vector.h"/>
  </compounddef>
</doxygen>
